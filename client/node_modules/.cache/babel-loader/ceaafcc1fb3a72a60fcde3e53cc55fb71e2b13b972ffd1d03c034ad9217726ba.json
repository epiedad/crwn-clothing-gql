{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst config = {\n  apiKey: \"AIzaSyDAkIy77ejtz73iZA84Bn1vmuelXGYl2Xo\",\n  authDomain: \"crwn-db2-53a5a.firebaseapp.com\",\n  projectId: \"crwn-db2-53a5a\",\n  storageBucket: \"crwn-db2-53a5a.appspot.com\",\n  messagingSenderId: \"606757545006\",\n  appId: \"1:606757545006:web:c296806ffd2a11585aebbf\",\n  measurementId: \"G-DMLWPEF824\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collection => {\n  const transformedCollection = collection.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","console","log","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","convertCollectionsSnapshotToMap","collection","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged"],"sources":["/home/eli/crwn-clothing/client/src/firebase/firebase.utils.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nconst config = {\n  apiKey: \"AIzaSyDAkIy77ejtz73iZA84Bn1vmuelXGYl2Xo\",\n  authDomain: \"crwn-db2-53a5a.firebaseapp.com\",\n  projectId: \"crwn-db2-53a5a\",\n  storageBucket: \"crwn-db2-53a5a.appspot.com\",\n  messagingSenderId: \"606757545006\",\n  appId: \"1:606757545006:web:c296806ffd2a11585aebbf\",\n  measurementId: \"G-DMLWPEF824\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    console.log(userRef);\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\nexport const convertCollectionsSnapshotToMap = (collection) => {\n  const transformedCollection = collection.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  })\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  })\n  await batch.commit();\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth);\n        }, reject)\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}