{"ast":null,"code":"var _jsxFileName = \"/home/eli/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = _ref => {\n  _s();\n  let {\n    googleSignIn,\n    emailSignInStart\n  } = _ref;\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n  const handleSubmit = event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({\n      ...userCredentials,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        required: true,\n        handleChange: handleChange,\n        label: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        required: true,\n        handleChange: handleChange,\n        label: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButtonContainer, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButtonContainer, {\n          type: \"button\",\n          onClick: () => googleSignIn(),\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(SignIn, \"C5ZAkg2WNqmCHgVhJgdoSvEAgak=\");\n_c = SignIn;\nconst mapDispatchToProps = dispatch => ({\n  googleSignIn: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\nexport default connect(null, mapDispatchToProps)(SignIn);\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","connect","FormInput","CustomButtonContainer","googleSignInStart","emailSignInStart","jsxDEV","_jsxDEV","SignIn","_ref","_s","googleSignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","label","onClick","isGoogleSignIn","_c","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["/home/eli/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions';\n\nconst SignIn = ({ googleSignIn, emailSignInStart}) => {\n    const [userCredentials, setCredentials] = useState({\n        email: '',\n        password: ''\n    });\n    const { email, password } = userCredentials;\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        emailSignInStart(email, password);\n    }\n\n    const handleChange = (event) => {\n        const { value, name} = event.target;\n\n        setCredentials({...userCredentials, [name]: value });\n    }\n \n    return(\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    name=\"email\" \n                    type=\"email\" \n                    value={email} \n                    required \n                    handleChange={handleChange}\n                    label=\"email\"\n                />\n                <FormInput\n                    name=\"password\" \n                    type=\"password\" \n                    value={password} \n                    required \n                    handleChange={handleChange}\n                    label=\"password\"\n                />\n                <div className='buttons'>\n                    <CustomButtonContainer type=\"submit\">Sign in</CustomButtonContainer>\n                    <CustomButtonContainer type=\"button\" onClick={() => googleSignIn()} isGoogleSignIn>\n                        Sign in with Google\n                    </CustomButtonContainer>\n                </div>\n\n            </form>\n        </div>    \n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignIn: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}