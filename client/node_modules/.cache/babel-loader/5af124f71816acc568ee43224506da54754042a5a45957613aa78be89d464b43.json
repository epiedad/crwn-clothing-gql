{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport UserActionTypes from '../user/user-types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* onSignInSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, fetchCollectionsAsync);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart), call(onSignInSuccess), call(onSignUpSuccess)]);\n}","map":{"version":3,"names":["takeLatest","call","put","all","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","UserActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","onSignInSuccess","SIGN_IN_SUCCESS","onSignUpSuccess","SIGNUP_SUCCESS","shopSagas"],"sources":["/home/eli/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions';\n\nimport UserActionTypes from '../user/user-types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport function* fetchCollectionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapShot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchCollectionStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n}\n\nexport function* onSignInSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, fetchCollectionsAsync);\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, fetchCollectionsAsync)\n}\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionStart),\n        call(onSignInSuccess),\n        call(onSignUpSuccess)\n    ])\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,oBAAoB;AAC/D,OAAOC,eAAe,MAAM,cAAc;AAC1C,SACIC,uBAAuB,EACvBC,uBAAuB,QACpB,gBAAgB;AAEvB,OAAOC,eAAe,MAAM,oBAAoB;AAChD,SAASC,SAAS,EAAEC,+BAA+B,QAAQ,+BAA+B;AAE1F,OAAO,UAAUC,qBAAqBA,CAAA,EAAG;EACrC,IAAI;IACA,MAAMC,aAAa,GAAGH,SAAS,CAACI,UAAU,CAAC,aAAa,CAAC;IACzD,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,EAAE;IAC1C,MAAMC,cAAc,GAAG,MAAMd,IAAI,CAACQ,+BAA+B,EAAEI,QAAQ,CAAC;IAC5E,MAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAc,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAO,CAAC,CAAC;EACrD;AACJ;AAEA,OAAO,UAAUC,oBAAoBA,CAAA,EAAG;EACpC,MAAMlB,UAAU,CACZI,eAAe,CAACe,uBAAuB,EACvCT,qBAAqB,CACxB;AACL;AAEA,OAAO,UAAUU,eAAeA,CAAA,EAAG;EAC/B,MAAMpB,UAAU,CAACO,eAAe,CAACc,eAAe,EAAEX,qBAAqB,CAAC;AAC5E;AAEA,OAAO,UAAUY,eAAeA,CAAA,EAAG;EAC/B,MAAMtB,UAAU,CAACO,eAAe,CAACgB,cAAc,EAAEb,qBAAqB,CAAC;AAC3E;AAEA,OAAO,UAAUc,SAASA,CAAA,EAAG;EACzB,MAAMrB,GAAG,CAAC,CACNF,IAAI,CAACiB,oBAAoB,CAAC,EAC1BjB,IAAI,CAACmB,eAAe,CAAC,EACrBnB,IAAI,CAACqB,eAAe,CAAC,CACxB,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}