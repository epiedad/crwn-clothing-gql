{"ast":null,"code":"var _jsxFileName = \"/home/eli/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\nimport { signUpStart } from '../../redux/user/user-actions';\nimport './sign-up.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = _ref => {\n  _s();\n  let {\n    signUpStart\n  } = _ref;\n  const [userDetails, setUserDetails] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userDetails;\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n    signUpStart(displayName, email, password);\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserDetails({\n      ...userDetails,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButtonContainer, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"N2IPcXIrhjVTKCrO7lL8xo18LX8=\");\n_c = SignUp;\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","connect","FormInput","CustomButtonContainer","signUpStart","jsxDEV","_jsxDEV","SignUp","_ref","_s","userDetails","setUserDetails","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","label","required","_c","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["/home/eli/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\n\nimport { signUpStart } from '../../redux/user/user-actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n    const [userDetails, setUserDetails] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    })\n    \n    const { displayName, email, password, confirmPassword }  = userDetails;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n        if(password !== confirmPassword) {\n            alert(\"password don't match\");\n            return;\n        }\n\n        signUpStart(displayName, email, password);\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserDetails({...userDetails, [name]: value });\n    }\n\n    return(\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>\n                Sign up with your email and password\n            </span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButtonContainer type='submit'>Sign Up</CustomButtonContainer>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({ displayName, email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}